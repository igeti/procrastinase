Беспорядок в репозитории
 - .*.sw? - временные файлы Vim, должны быть в .gitignore
 - Makefile generated by qmake, moc_*.cpp, *.o, *.exe, ELF - файлы, которые
генерируются из исходников, должны быть в отдельной директории сборки,
помещённой в .gitignore
 - *.zip - Git плохо работает с большими бинарными данными
 - дупликация: graphics.zip как-то соотносится с /graphics/
 - __MACOS: какие-то ресурсы, специфичные для macOS и не относящиеся к коду;
показывают следы хранения кода в DropBox
 - .DS_Store: аналогично, специфичный для macOS и не относящийся к делу файл
 - всего 2 коммита за всю историю, без осмысленных названий
  - один гигантский, добавляющий кучу бинарников
  - второй более-менее осмыслен, но тоже изменяет бинарники

Код
 - Комментарии:
  - Их ровно 3, не считая закомментированного кода, TODO и -- <имя класса> --.
  - С другой стороны, в коде встречаются закомментированные блоки кода. VCS
предназначены для того, чтобы код можно было просто удалить - он всё равно
останется в истории, и его удаление будет сопровождено commit message.
 - graphics/: Ручное использование malloc и free: RAII обёртки для указателей
std::unique_ptr, std::shared_ptr автоматически освобождают память, а new
бросает std::bad_alloc, если не может выделить память - нельзя пропустить
ошибку. Возможно, оправданно ради быстродействия
 - Flash.cpp: много классов в пределах одного translation unit. Система сборки
сможет сэкономить время компиляции, пересобирая только файлы с изменённым
кодом, если вынести каждый класс в отдельный файл. Принцип наименьшей
ответственности можно применять и к файлам с исходным кодом.
 - Flash.cpp: сплошные неименованные константы. Я могу понять степени двойки,
но 17? TCP-порт 8080 напрашивается на отдельный #define, общий для двух кодовых
баз (вместе с Client).

Flash.cpp:220 нет проверки на ошибку realloc
Flash.cpp:353 и ниже: сравнение key->text() с QString требует вызова метода
QString::operator==. Куда эффективнее будет достать целочисленный код и
сравнивать его с известными константами.
Flash.cpp:439 может разыменовать int * n = NULL - нужно изменить проверяемое
условие
graphics/src/bitmap.cxx:13,15,17,19,21: утечка FILE * fileptr при ошибке -
нужно использовать unique_ptr или аналог

При выходе из программы:
*** Error in `./C++ProjectSphere_sem1': double free or corruption (out):
0x00007fff0f1f6b40 ***
Аварийный останов
Почему-то оказывается повреждён указатель DroneWindow->serv.

Придирки:
Flash.hpp: struct Player: по английски греческие буквы называются phi и theta.
Flash.cpp:469: вложенные циклы for желательно выделить отступами
